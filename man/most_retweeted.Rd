% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/analysis.R
\name{most_retweeted}
\alias{most_retweeted}
\title{Most Retweeted}
\usage{
most_retweeted(con, start.date = NULL, end.date = NULL,
  where.criteria = NULL, limit = 10, excel.export.file = NULL,
  excel.file.footnote = "auto")
}
\arguments{
\item{con}{SQLite data connection to Twitter database (see \code{\link{twitter_database}}).}

\item{start.date}{character date (or datetime) of earliest statuses queried.}

\item{end.date}{character date.  Results will include statuses 
with creation times or dates strictly less than this parameter.}

\item{where.criteria}{character additional criteria to filter the status results, in 
SQLite syntax.  See details.}

\item{limit}{integer number of results to return.}

\item{excel.export.file}{character name of file to write results in Excel format.  If 
\code{NULL} no file is written.}

\item{excel.file.footnote}{character table footnote to include in Excel file.  if 
\code{"auto"} the date range will be written.}
}
\value{
data frame containing most 'retweeted' Tweets meeting the filter criteria.
}
\description{
Get the most retweeted Tweets from a Twitter database
}
\details{
Provide filter criteria in the \code{start.date}, \code{end.date}, and 
\code{where.criteria} parameters.  The results will include statuses created
at times greater than or equal to the \code{start.date}, but strictly less
than the \code{end.date}.  The \code{where.criteria} must be in SQLite syntax and
reference tables and columns in the database (see \code{\link{twitter_database}}).
Be sure to include table names, e.g., \code{user.location LIKE '\%fargo\%'}.
Returns the most frequent hashtags 
in the tweets meeting the filter criteria.

This method is different from \code{\link{most_popular_RT_in_sample}} because it uses
the total number of retweets, which is attached as meta-data to the Tweet
when it is collected.  The \code{\link{most_popular_RT_in_sample}}
method only counts retweets in the database meeting the supplied filter criteria.

Note that retweet counts are obtained at the time of collection, and are not maintained
in real time.  Therefore, this metric is prone to time-of-collection bias and should
be used with care.
}
\examples{

\dontrun{
auth.vector <- authorize_IT()

con <- twitter_database(
  "test.sqlite",
  query.users.df = data.frame(
    screen_name = c(
      "pb2pv",
      "zlisto"
    )
  ),
  query.text.df = data.frame(
    query_text = c(
      "#throwbackthursday",
      "#worstfirstdate"
    )
  )
)

update_user_timelines(con)
update_search(con)

most.retweeted <- most_retweeted(
  con,
  start.date = as.Date(Sys.time())-7,
  where.criteria = "user.screen_name = 'zlisto'"
)


DBI::dbDisonnect(con)
}
}
\seealso{
\code{\link{twitter_database}}, \code{\link{authorize_app}}, 
\code{\link{most_popular_RT_in_sample}}
}
