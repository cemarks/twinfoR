% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api_calls.R
\name{status_show}
\alias{status_show}
\title{Show Status}
\usage{
status_show(status_id, authentication.vector, include_entities = TRUE,
  trim_user = FALSE, map = NULL, include_ext_alt_text = NULL,
  include_card_uri = NULL, tweet_mode = "extended")
}
\arguments{
\item{status_id}{numeric or character single status_id.}

\item{authentication.vector}{character vector containing authentication tokens and secrets.
See \code{\link{authorize_app}} and \code{\link{authorize_IT}}.}

\item{include_entities}{logical indicating whether to include profile entities (e.g., urls)
as separate nodes in the returned json object.}

\item{trim_user}{logical indicating whether to remove the user object from each status.}

\item{map}{logical indicating whether to return status_ids with NULL values if they do not
exist or cannot be viewed by the authenticated user.}

\item{include_ext_alt_text}{logical indicating whether to return "alt" text assigned to any
attached media entities.}

\item{include_card_uri}{logical indicating whether to include a \code{card_uni} attribute with each
tweet when there is an ad attached to the tweet using the \code{card_uni} value.}

\item{tweet_mode}{character either 'extended' for full_text statuses or 'compat' for
140 character compatability.}
}
\value{
On success, an R list representation of the returned JSON object.  On failure, a warning
is thrown and the http response is returned, if any.
}
\description{
Get a Single Twitter Status Object from the Show Status API
}
\details{
This function calls \code{\link{twitter_request}} using the Twitter
statuses/show endpoint (see
\href{https://developer.twitter.com/en/docs/tweets/post-and-engage/api-reference/get-statuses-show-id}{Show Status API Documentation}).
A user_id or screen_name is required.  If an authentication vector is not
provided and there is no globally defined \code{auth.vector}, an error is returned.
This function is similar to the \code{\link{status_lookup}} function, except that it only takes and
returns a single status object.
}
\examples{

## Not run: authenticate
# auth.vector <- authorize_IT()

status.obj <- status_show(
  "1059843699298000897",
  authentication.vector = auth.vector
)

cat(status.obj$full_text)

}
\seealso{
\code{\link{twitter_request}}, \code{\link{authorize_app}}, \code{\link{status_lookup}}
}
