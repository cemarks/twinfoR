% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_model.R
\name{insert_statuses}
\alias{insert_statuses}
\title{Insert Twitter Status Objects}
\usage{
insert_statuses(conn, status.list, calc.Rsentiment = FALSE,
  calc.syu = FALSE, status.media.hash = FALSE,
  status.media.64bit = FALSE, profile.img.hash = FALSE,
  profile.img.64bit = FALSE, statuses.per.insert = 50,
  insert.users = TRUE)
}
\arguments{
\item{conn}{a Twitter database connection.  See \code{twitter_database}.}

\item{status.list}{list of Twitter status objects,}

\item{calc.Rsentiment}{logical.  If \code{TRUE}, the status text sentiment will be calculated using
the \code{RSentiment} library.}

\item{calc.syu}{logical.  If \code{TRUE}, the status text sentiment will be calculated using
the \code{syuzhet} library.}

\item{status.media.hash}{logical.  If \code{TRUE}, status image average hash values will be
calculated and inserted into the \code{media} data table.}

\item{status.media.64bit}{logical.  If \code{TRUE}, status images will be 64-bit encoded and inserted
into the \code{media} table.  Note: this will significantly increase processing time and sqlite
database file size.}

\item{profile.img.hash}{logical.  If \code{TRUE}, the function will attempt to calculate profile 
and profile banner image average hash values and insert them into the \code{user} data table.}

\item{profile.img.64bit}{logical.  If \code{TRUE}, the function will attempt to compute profile 
and profile banner image 64-bit encodings and insert them into the \code{user} data table. Note: this
will significantly increase processing time and sqlite database file size.}

\item{statuses.per.insert}{integer.  The maximum number of statuses per insert statement.}

\item{insert.users}{logical.  If \code{TRUE}, user objects attached to the input status objects
will be inserted into the \code{user} table.}
}
\value{
\code{NULL} (Invisible).
}
\description{
Insert Twitter Status (Tweet) objects into Twitter database connection
}
\details{
This function inserts
Twitter status objects in the the \code{status} table in the data connection.  
It also inserts applicable records into the \code{media}, \code{hashtag},
\code{user_mention}, and \code{url} tables.  This method is called by recursive
functions that obtain status objects through the Twitter API, if a data
connection is supplied.
}
\examples{

\dontrun{
auth.vector <- authorize_IT()

statuses <- user_timeline_recursive("nytimes")

conn <- twitter_database("tweetanalysis.sqlite")

insert_statuses(conn,user.objs)
}
}
\seealso{
\code{\link{twitter_database}}, \code{\link{user_timeline_recursive}},
\code{\link{status_lookup_recursive}}, \code{\link{search_tweets_recursive}},
\code{\link{update_user_timelines}}, \code{\link{update_search}}
}
