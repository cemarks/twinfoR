% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api_calls.R
\name{user_search}
\alias{user_search}
\title{User Search}
\usage{
user_search(q, authentication.vector, page = NULL, count = 20,
  include_entities = TRUE, tweet_mode = "extended")
}
\arguments{
\item{q}{character search query.}

\item{authentication.vector}{character vector containing authentication tokens and secrets.
See \code{\link{authorize_app}} and \code{\link{authorize_IT}}.}

\item{page}{numeric page of results to retrieve.}

\item{count}{numeric number of results per page, up to a maximum of 20.}

\item{include_entities}{logical indicating whether to include profile entities (e.g., urls)
as separate nodes in the returned json object.}

\item{tweet_mode}{character either 'extended' for full_text statuses or 'compat' for
140 character compatability.}
}
\value{
On success, an R list representation of the returned JSON object.  On failure, a warning
is thrown and the http response is returned, if any.
}
\description{
Get a Twitter User Objects from the User Search API
}
\details{
This function calls \code{\link{twitter_request}} using the Twitter
users/search endpoint (see
\href{https://developer.twitter.com/en/docs/accounts-and-users/follow-search-get-users/api-reference/get-users-search}{User Search API Documentation}).
A query (\code{q}) is required.  If an authentication vector is not
provided and there is no globally defined \code{auth.vector}, an error is returned.
}
\examples{

## Not run: authenticate
# auth.vector <- authorize_IT()

searched.users <- user_search(
  "Donald Trump",
  authentication.vector = auth.vector
)

cat(searched.users[[3]]$description)

}
\seealso{
\code{\link{twitter_request}}, \code{\link{authorize_app}}
}
