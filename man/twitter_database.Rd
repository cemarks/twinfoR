% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_model.R
\name{twitter_database}
\alias{twitter_database}
\title{Create Twitter SQLite Connection}
\usage{
twitter_database(db.name, query.users.df = NULL, query.text.df = NULL,
  query.tables.overwrite = FALSE, driver = RSQLite::SQLite(), ...)
}
\arguments{
\item{db.name}{character name of database.  If SQLite connection, this is the
file name.}

\item{query.users.df}{data.frame to be uploaded as the query.users table}

\item{query.text.df}{data.frame to be uploaded as the query.text table}

\item{query.tables.overwrite}{logical indicating whether the query.users
and query.text tables should be overwritten with tables provided (does not
apply if tables are not provided).}

\item{driver}{DBI database driver object (experimental).  Default is RSQLite::SQLite().
Other drivers are in development.}

\item{...}{Other named arguments passed to the DBI::dbConnect function.}
}
\value{
An S4 connection object that inherits from \code{DBI::DBIConnection} class.
}
\description{
Create RSQLite connection and Twitter tables
}
\details{
Opens a connection to an SQLite database on the path provided.
The database file is created if it does not exist.  Tables 'user',
'status', 'user_mention', 'hashtag', 'url', and 'media' are created
if the do not exist.  The data connection has a special structure to
store Twitter data.
Optional tables 'query_users' and 'query_text' are not created unless these
tables are provided as data frames.  The search_status table is created
if a 'query_text' table is created.  Each of tables are described below.
}
\section{\code{user} table}{

This table is created automatically to contain all of the user objects
collected, including user objects embedded in tweets collected using
a method that returns statuses, e.g., the search API.  It consists of
the following columns.
\tabular{lll}{
COLUMN \tab TYPE \tab DESCRIPTION \cr
id \tab TEXT \tab Twitter user_id \cr
screen_name \tab TEXT \tab Twitter user screen_name \cr
name \tab TEXT \tab Twitter user name \cr
location \tab TEXT \tab User self-identified location \cr
description \tab TEXT \tab User self-description \cr
url \tab TEXT \tab User self-identified URL \cr
protected \tab TINYINT(1) \tab Account protected TINYINT(1)ean \cr
followers_count \tab INT \tab User follower count \cr
friends_count \tab INT \tab User friend count \cr
statuses_count \tab INT \tab User's number of tweets \cr
created_at \tab DATETIME \tab Account creation date-time \cr
favourites_count \tab INT \tab Number of tweets 'liked' by user \cr
geo_enabled \tab TINYINT(1) \tab Account geo-enabled TINYINT(1)ean \cr
verified \tab TINYINT(1) \tab Account owner verified TINYINT(1)ean \cr
lang \tab TEXT \tab Account langauage abbreviation \cr
status_id \tab TEXT \tab Account recent/pinned status \cr
profile_image_url \tab TEXT \tab URL to profile image \cr
profile_banner_url \tab TEXT \tab URL to profile banner image \cr
profile_image_hash \tab TEXT \tab profile image average hash (optional, requires OpenImageR) \cr
profile_banner_hash \tab TEXT \tab profile banner average hash (optional, requires OpenImageR) \cr
profile_image_b64 \tab TEXT \tab profile image 64-bit encoding (optional, requires base64enc) \cr
profile_banner_b64 \tab TEXT \tab profile banner 64-bit encoding (optional, requires base64enc)
}
}

\section{\code{status} table}{

This table contains the status or tweet objects collected.  These
statuses can include retweets embedded in collected tweets or
statuses embedded in user objects.  The table consists of
the following columns.
\tabular{lll}{
COLUMN \tab TYPE \tab DESCRIPTION \cr
id \tab TEXT \tab Twitter status_id \cr
created_at \tab DATETIME \tab Status creation date-time \cr
user_id \tab TEXT \tab Twitter status user_id \cr
screen_name \tab TEXT \tab Twitter status screen_name \cr
text \tab TEXT \tab Status text \cr
in_reply_to_status_id \tab TEXT \tab Twitter status_id of replied-to tweet \cr
in_reply_to_user_id \tab TEXT \tab Twitter user_id of replied-to user \cr
retweet_count \tab INT \tab Number of times original status was retweeted \cr
favorite_count \tab INT \tab Number of times original status was 'liked' \cr
lang \tab TEXT \tab Status language abbreviation \cr
geo_lat \tab FLOAT \tab Geo-location latitude, if available \cr
geo_long \tab FLOAT \tab Geo-location longitude, if available \cr
source \tab TEXT \tab Application used to post the tweet \cr
retweet \tab TINYINT(1) \tab TINYINT(1)ean indiating whether status is a retweet \cr
retweet_status_id \tab TEXT \tab Retweeted status status_id \cr
sentiment_score \tab INT \tab Rsentiment sentiment score \cr
nrc_sentiment_anger \tab INT \tab NRC 'anger' score using syuzhet package \cr
nrc_sentiment_anticipation  \tab INT \tab NRC 'anticipation' score using syuzhet package \cr
nrc_sentiment_disgust  \tab INT \tab NRC 'disgust' score using syuzhet package \cr
nrc_sentiment_fear \tab INT \tab NRC 'fear' score using syuzhet package \cr
nrc_sentiment_joy \tab INT \tab NRC 'joy' score using syuzhet package \cr
nrc_sentiment_sadness \tab INT \tab NRC 'sadness' score using syuzhet package \cr
nrc_sentiment_surprise \tab INT \tab NRC 'surprise' score using syuzhet package \cr
nrc_sentiment_trust \tab INT \tab NRC 'trust' score using syuzhet package \cr
nrc_sentiment_negative \tab INT \tab NRC 'negative' score using syuzhet package \cr
nrc_sentiment_positive \tab INT \tab NRC 'positive' score using syuzhet package \cr
sentiment_collected \tab TINYINT(1) \tab TINYINT(1)ean (0/1) indicating whether sentiment analysis has been run\cr
}
}

\section{\code{user_mention} table}{

This table captures the one to many relationship between tweets (i.e., statuses)
and user-mentions.  If a status mentions a user, that mention is captured in this
table.
\tabular{lll}{
COLUMN \tab TYPE \tab DESCRIPTION \cr
status_id \tab TEXT \tab The status_id of the tweet \cr
user_mention_id \tab TEXT \tab The mentioned user's user_id \cr
user_mention_screen_name \tab TEXT \tab the mentioned user's screen_name \cr
user_mention_name \tab TEXT \tab the mentioned user's name
}
}

\section{\code{hashtag} table}{

This table captures the one to many relationship between tweets (i.e., statuses)
and hashtags.  If a status includes a hashtag, that hashtag is captured in this
table.
\tabular{lll}{
COLUMN \tab TYPE \tab DESCRIPTION \cr
status_id \tab TEXT \tab The status_id of the tweet \cr
hashtag_text \tab TEXT \tab The hashtag text (omitting the '#')
}
}

\section{\code{url} table}{

This table captures the one to many relationship between tweets (i.e., statuses)
and urls.  If a status includes a url, that url is captured in this
table.
\tabular{lll}{
COLUMN \tab TYPE \tab DESCRIPTION \cr
status_id \tab TEXT \tab The status_id of the tweet \cr
display_url \tab TEXT \tab The display text for the URL in the status \cr
extended_url \tab TEXT \tab The full URL
}
}

\section{\code{media} table}{

This table captures the one to many relationship between tweets (i.e., statuses)
and attached media (images).  If a status includes an image, information about that
image is captured in this table.
\tabular{lll}{
COLUMN \tab TYPE \tab DESCRIPTION \cr
status_id \tab TEXT \tab The status_id of the tweet \cr
media_id \tab TEXT \tab The twitter media_id assigned to the image \cr
expanded_url \tab TEXT \tab The twitter URL to the image \cr
media_url \tab TEXT \tab The twitter URL to the image page \cr
media_type \tab TEXT \tab The twitter media_type category \cr
source_user_id \tab TEXT \tab The user_id for the user that uploaded the image \cr
source_status_id \tab TEXT \tab the status_id for the original status attaching the image \cr
img_hash \tab TEXT \tab average hash string for image (optional, requires OpenImageR) \cr
img_b64 \tab TEXT \tab 64-bit image encoding (optional, requires base64enc)
}
}

\section{\code{query_users} table}{

This optional table allows analysts to categorize Twitter users for
collection and analysis.  It *must* include users' screen_names or
user_ids.  It can include as many columns as the analyst requires.
\tabular{lll}{
COLUMN \tab TYPE \tab DESCRIPTION \cr
id \tab TEXT \tab Row ID for reference and indexing \cr
user_id \tab TEXT or TEXT \tab Twitter user_id \cr
screen_name \tab TEXT \tab Twitter screen_name \cr
since_id \tab TEXT \tab Most recent status from user in database \cr
friends_collected \tab TINYINT \tab Indicates whether user's friends have been collected \cr
followers_collected \tab TINYINT \tab Indicates whether user's followers have been collected \cr
[CATEGORY1] \tab [TYPE] \tab Analyst-defined user categorization \cr
[CATEGORY2] \tab [TYPE] \tab Analyst-defined user categorization \cr
... \tab ... \tab Analyst-defined user categorization \cr
[CATEGORYN] \tab [TYPE] \tab Analyst-defined user categorization \cr
}
}

\section{\code{followers} table}{

This table is created to capture virtual relationships in Twitter.
\tabular{lll}{
COLUMN \tab TYPE \tab DESCRIPTION \cr
follower_id \tab TEXT \tab The user_id of the follower in the relationship \cr
friend_id \tab TEXT \tab The user_id of the friend in the relationship.
}
}

\section{\code{query_text} table}{

This optional table allows analysts to categorize search queries for
collection and analysis.  It *must* include a query_text column.
It can include as many columns as the analyst requires.
\tabular{lll}{
COLUMN \tab TYPE \tab DESCRIPTION \cr
id \tab INT \tab Row ID for indexing and referencing. \cr
query_text \tab TEXT \tab Character string to be used in search queries \cr
since_id \tab TEXT \tab Most recent status from query in database \cr
[CATEGORY1] \tab [TYPE] \tab Analyst-defined user categorization \cr
[CATEGORY2] \tab [TYPE] \tab Analyst-defined user categorization \cr
... \tab ... \tab Analyst-defined user categorization \cr
[CATEGORYN] \tab [TYPE] \tab Analyst-defined user categorization \cr
}
}

\section{\code{search_status} table}{

This table is created to map statuses to queries, effectively recording
which search queries produced which tweets.
\tabular{lll}{
COLUMN \tab TYPE \tab DESCRIPTION \cr
query_id \tab INT \tab The row ID for the query in the query_text table \cr
status_id \tab TEXT \tab The status_id that resulted from the query.
}
}

\examples{

\dontrun{
con <- twitter_database("tweet_collection.sqlite")
}

}
\seealso{
\code{\link{search_tweets}},\code{\link{user_timeline}}, \code{\link[DBI]{dbConnect}}
}
