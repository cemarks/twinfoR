% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_model.R
\name{insert_users}
\alias{insert_users}
\title{Insert Twitter User Objects}
\usage{
insert_users(conn, user.list, calc.Rsentiment = FALSE,
  calc.syu = FALSE, status.media.hash = FALSE,
  status.media.64bit = FALSE, profile.img.hash = FALSE,
  profile.img.64bit = FALSE, users.per.insert = 50,
  insert.statuses = FALSE)
}
\arguments{
\item{conn}{a Twitter database connection.  See \code{twitter_database}.}

\item{user.list}{list of Twitter user objects,}

\item{calc.Rsentiment}{logical.  If \code{TRUE}, the status text sentiment will be calculated using
the \code{RSentiment} library.}

\item{calc.syu}{logical.  If \code{TRUE}, the status text sentiment will be calculated using
the \code{syuzhet} library.}

\item{status.media.hash}{logical.  If \code{TRUE}, status image average hash values will be
calculated and inserted into the \code{media} data table.}

\item{status.media.64bit}{logical.  If \code{TRUE}, status images will be 64-bit encoded and inserted
into the \code{media} table.  Note: this will significantly increase processing time and sqlite
database file size.}

\item{profile.img.hash}{logical.  If \code{TRUE}, the function will attempt to calculate profile 
and profile banner image average hash values and insert them into the \code{user} data table.}

\item{profile.img.64bit}{logical.  If \code{TRUE}, the function will attempt to compute profile 
and profile banner image 64-bit encodings and insert them into the \code{user} data table. Note: this
will significantly increase processing time and sqlite database file size.}

\item{users.per.insert}{integer.  The maximum number of users per insert statement.}

\item{insert.statuses}{logical.  If \code{TRUE}, status objects attached to the user objects
will be inserted into the \code{status} table.}
}
\value{
\code{NULL} (Invisible).
}
\description{
Insert Twitter user objects into Twitter database connection
}
\details{
This function does *not* add users to the \code{query_users} table.  Rather, it inserts
the Twitter user objects in the the \code{user} table in the data connection.  These 
users will appear in analyses of the data, but will not be automatically updated or 
included in queries of only.  To add users to the query table, see \code{\link{update_users}}.
This method is called by recursive methods that return Twitter user objects, if a
data connection is supplied.
}
\examples{

\dontrun{
auth.vector <- authorize_IT()

user.objs <- user_lookup(c("nytimes","bostonglobe"))

conn <- twitter_database("tweetanalysis.sqlite")

insert_users(conn,user.objs)
}
}
\seealso{
\code{\link{twitter_database}}, \code{\link{user_lookup_recursive}},
\code{\link{user_search_recursive}}, \code{\link{update_users}}
}
