% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/update_data.R
\name{update_user_timelines}
\alias{update_user_timelines}
\title{Collect and Insert User Timelines}
\usage{
update_user_timelines(con, authentication.vector, user_id = NULL,
  screen_name = NULL, ...)
}
\arguments{
\item{con}{Twitter database connection (see \code{\link{twitter_database}}).}

\item{authentication.vector}{character vector with Twitter authentication
keys.  See \code{\link{authorize_IT}} or \code{\link{authorize_app}}.}

\item{user_id}{character vector of Twitter user_ids.}

\item{screen_name}{character vector of Twitter screen_names.  Ignored
if \code{user_id} is supplied.}

\item{...}{additional named parameters sent to \code{\link{user_timeline_recursive}}.}
}
\value{
\code{NULL} (Invisible).
}
\description{
Collect User Timelines and insert new statuses in a Twitter database
}
\details{
This function queries the Twitter API for status objects for users 
in the \code{query_users} table that have not been added to
the \code{status} table.  If a \code{screen_name} or \code{user_id} vector
is supplied, then *only* these users' statuses will be collected and 
inserted into the \code{status} table.  These users
will also be added to the \code{query_users} table if they do not already appear there. 
If \code{authentication.vector} is not supplied and no global 
\code{auth.vector} exists, this method returns an error.
}
\examples{

\dontrun{
auth.vector <- authorize_IT()

con <- twitter_database(
  "test2.sqlite",
  query.users.df = data.frame(
    screen_name = c(
      "bostonglobe",
      "nytimes"
    )
  )
)
update_user_timelines(con)

DBI::dbDisonnect(con)
}
}
\seealso{
\code{\link{twitter_database}}, \code{\link{user_timeline_recursive}},
\code{\link{update_users}}, \code{\link{insert_statuses}}
}
