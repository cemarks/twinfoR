% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api_recursives.R
\name{user_search_recursive}
\alias{user_search_recursive}
\title{Recursive User Search}
\usage{
user_search_recursive(q, data.connection, authentication.vector,
  include_entities = TRUE, tweet_mode = "extended", max_queries = 5,
  ...)
}
\arguments{
\item{q}{character search query.}

\item{data.connection}{a DBI connection to an RSQLite \code{\link{twitter_database}}.}

\item{authentication.vector}{character vector containing authentication tokens and secrets.
See \code{\link{authorize_app}} and \code{\link{authorize_IT}}.}

\item{include_entities}{logical indicating whether to include profile entities (e.g., urls)
as separate nodes in the returned json object.}

\item{tweet_mode}{character either 'extended' for full_text statuses or 'compat' for
140 character compatability.}

\item{max_queries}{numeric maximum number of user search queries to perform.}

\item{...}{other named parameters passed to \code{\link{insert_users}}.}
}
\value{
\code{NULL} if \code{data.connection} is supplied, otherwise a list of user objects.
}
\description{
Recursively query the User Search API
}
\details{
This function recursively queries the
users/search endpoint (see
\href{https://developer.twitter.com/en/docs/accounts-and-users/follow-search-get-users/api-reference/get-users-search}{User Search API Documentation}).
A query (\code{q}) is required.  This method includes a one second delay per query
to avoid exceeding the API rate limit.  User search queries are performed until
either \code{max_queries} is reached or results are repeated.

If the \code{authentication.vector} parameter is missing, this method checks the global
environment for \code{auth.vector}.  If this variable exists, the function will use
this variable as the \code{authentication.vector}.  If this variable does not exist, the
function will throw an error.
}
\examples{

\dontrun{
auth.vector <- authorize_IT()

searched.users <- user_search_recursive(
  "Trump",
  authentication.vector = auth.vector,
  max_queries = 5
)

cat(searched.users[[3]]$description)
}
}
\seealso{
\code{\link{user_search}}, \code{\link{insert_users}}, \code{\link{twitter_database}}
}
