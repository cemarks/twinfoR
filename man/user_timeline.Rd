% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api_calls.R
\name{user_timeline}
\alias{user_timeline}
\title{Get User Timeline}
\usage{
user_timeline(screen_name, user_id, authentication.vector, count = 200,
  since_id = NULL, max_id = NULL, trim_user = FALSE,
  exclude_replies = FALSE, include_rts = TRUE,
  tweet_mode = "extended")
}
\arguments{
\item{screen_name}{character screen_name.  This is only used is \code{user_id} is missing.}

\item{user_id}{numeric or character user_id.}

\item{authentication.vector}{character vector containing authentication tokens and secrets.
See \code{\link{authorize_app}} and \code{\link{authorize_IT}}.}

\item{count}{numeric number of tweets to return per page, up to a maximum of 100.}

\item{since_id}{numeric or character status_id.  If supplied, only tweets with status_ids greater
than this value (and therefore more recent) will be returned.}

\item{max_id}{numeric or character status_id.  If suppled, only tweets with status_ids less than or
equal to this value (and therefore no more recent) will be returned.}

\item{trim_user}{logical indicating whether to remove the user object from each status.}

\item{include_rts}{logical indicating whether to include retweets in the results.}

\item{tweet_mode}{character either 'extended' for full_text statuses or 'compat' for
140 character compatability.}

\item{exlude_replies}{logical indicating whether to filter user replies to other statuses
from the results.}
}
\value{
On success, an R list representation of the returned JSON object.  On failure, a warning
is thrown and the http response is returned, if any.
}
\description{
Access Twitter Statuses Using the User Timeline API
}
\details{
This function calls \code{\link{twitter_request}} using the Twitter
statuses/user_timeline endpoint (see
\href{https://developer.twitter.com/en/docs/tweets/search/api-reference/get-statuses-user_timeline}{user_timeline API Documentation}).
A user_id or screen_name is required.  If an authentication vector is not
provided and there is no globally defined \code{auth.vector}, an error is returned.
}
\examples{

\dontrun{
auth.vector <- authorize_IT()

user.statuses <- user_timeline(
  "realDonaldTrump",
  authentication.vector = auth.vector
)

cat(user.statuses[[1]]$full_text)
}
}
\seealso{
\code{\link{twitter_request}}, \code{\link{authorize_app}}
}
