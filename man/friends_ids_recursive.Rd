% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api_recursives.R
\name{friends_ids_recursive}
\alias{friends_ids_recursive}
\title{Recursively Get Friends IDs}
\usage{
friends_ids_recursive(screen_name, user_id, data.connection,
  authentication.vector, stringify_ids = TRUE)
}
\arguments{
\item{screen_name}{character single screen_name.  This is only used is \code{user_id} is missing.}

\item{user_id}{numeric or character single user_id.}

\item{data.connection}{a DBI connection to an RSQLite \code{\link{twitter_database}}.}

\item{authentication.vector}{character vector containing authentication tokens and secrets.}

\item{stringify_ids}{logical indicating whether to return user_ids as strings.}
}
\value{
\code{NULL} if \code{data.connection} is supplied, otherwise a character or numeric vector of user_ids.
}
\description{
Recursively call the Friends IDs API to get all friends IDs
}
\details{
This function calls recursively calls the
friends/list endpoint (see
\href{https://developer.twitter.com/en/docs/accounts-and-users/follow-search-get-users/api-reference/get-friends-ids}{Friends IDs API Documentation}).
A user_id or screen_name is required.  If an authentication vector is not
provided and there is no globally defined \code{auth.vector}, an error is returned.  A *one minute* delay
is included for each query in order to avoid exceeding the rate limit.
}
\examples{

## Not run: authenticate
# auth.vector <- authorize_IT()

dma.friends <- friends_ids_recursive(
  "Nature_Island",
  authentication.vector = auth.vector
)

cat(
  dma.friends[1:20]
)

}
\seealso{
\code{\link{friends_ids}}, \code{\link{insert_friends}}
}
