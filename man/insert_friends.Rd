% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_model.R
\name{insert_friends}
\alias{insert_friends}
\title{Insert Friend Relationships}
\usage{
insert_friends(conn, follower.id, friend.ids, ids.per.insert = 1000)
}
\arguments{
\item{conn}{a Twitter database connection.  See \code{twitter_database}.}

\item{follower.id}{character user_id of Twitter follower.}

\item{friend.ids}{character user_ids of Twitter friends.}

\item{ids.per.insert}{integer maximum number of relationships per insert query.}
}
\value{
\code{NULL} (Invisible).
}
\description{
Insert Twitter Friend relationships into Twitter database connection
}
\details{
This function inserts 'friend' relationship information into the
\code{followers} table in the data connection.  It takes a single
follower user_id and multiple friend user_ids.  For each friend user_id,
a follower-friend relationship is entered into the table.  This method
is called by the \code{\link{friends_ids_recursive}} and 
\code{\link{friends_list_recursive}} functions.
}
\examples{

\dontrun{
auth.vector <- authorize_IT()

nyt <- user_show("nytimes")
nyt_friends <- friends_ids(user_id=nyt$id_str)

conn <- twitter_database("tweetanalysis.sqlite")

insert_friends(
  conn,
  nyt$id_str,
  sapply(
    nyt_friends,
    function(x) return(x$id_str)
  )
)
}
}
\seealso{
\code{\link{twitter_database}}, \code{\link{friends_list_recursive}}
\code{\link{friends_ids_recursive}}, \code{\link{get_all_friends}}
}
